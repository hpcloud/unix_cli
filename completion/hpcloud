_hpcloud()
{
  local cur prev opts cmds cmd files
  COMPREPLY=()
  _get_comp_words_by_ref -n : cur prev words

  if [[ ${cur} == -* ]] ; then
    if [ "${prev}" == "hpcloud" ]
    then
      cmd="hpcloud"
    else
      cmd="${words[1]}"
    fi
    case "${cmd}" in
    hpcloud)
      opts="--help --version"
      ;;
    account:catalog)
      opts="--debug"
      ;;
    account:edit)
      opts="--no-validate --provider"
      ;;
    account:setup)
      opts="--no-validate --provider"
      ;;
    account:verify)
      opts="--debug"
      ;;
    acl)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    acl:grant)
      opts="--account-name --debug --availability-zone"
      ;;
    acl:revoke)
      opts="--account-name --debug --availability-zone"
      ;;
    addresses)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    addresses:add)
      opts="--floating-ip --fixed-ip --account-name --debug --port --availability-zone --network"
      ;;
    addresses:associate)
      opts="--account-name --debug --availability-zone"
      ;;
    addresses:disassociate)
      opts="--account-name --debug --availability-zone"
      ;;
    addresses:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    cdn:containers)
      opts="--account-name --all --debug --availability-zone"
      ;;
    cdn:containers:add)
      opts="--account-name --debug --availability-zone"
      ;;
    cdn:containers:get)
      opts="--account-name --debug --availability-zone"
      ;;
    cdn:containers:location)
      opts="--account-name --debug --availability-zone --ssl"
      ;;
    cdn:containers:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    cdn:containers:set)
      opts="--account-name --debug --availability-zone"
      ;;
    containers:add)
      opts="--account-name --debug --availability-zone --force"
      ;;
    containers:remove)
      opts="--account-name --debug --availability-zone --force"
      ;;
    containers:sync)
      opts="--account-name --debug --availability-zone"
      ;;
    copy)
      opts="--mime --account-name --debug --restart --availability-zone --source-account"
      ;;
    dns)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    dns:add)
      opts="--account-name --ttl --debug --availability-zone"
      ;;
    dns:records)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    dns:records:add)
      opts="--account-name --debug --availability-zone"
      ;;
    dns:records:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    dns:records:update)
      opts="--account-name --debug --availability-zone"
      ;;
    dns:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    dns:servers)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    dns:update)
      opts="--account-name --ttl --debug --email --availability-zone"
      ;;
    flavors)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    get)
      opts="--account-name --debug --availability-zone"
      ;;
    images)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    images:add)
      opts="--account-name --debug --availability-zone --metadata"
      ;;
    images:metadata)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    images:metadata:add)
      opts="--account-name --debug --availability-zone"
      ;;
    images:metadata:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    images:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    keypairs)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    keypairs:add)
      opts="--private-key --account-name --debug --fingerprint --availability-zone --output"
      ;;
    keypairs:import)
      opts="--account-name --debug --availability-zone"
      ;;
    keypairs:public_key)
      opts="--account-name --debug --availability-zone"
      ;;
    keypairs:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    lb)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:add)
      opts="--account-name --debug --availability-zone --nodes --ips"
      ;;
    lb:algorithms)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:limits)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:nodes)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:nodes:add)
      opts="--account-name --debug --availability-zone"
      ;;
    lb:nodes:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    lb:nodes:update)
      opts="--account-name --debug --availability-zone"
      ;;
    lb:protocols)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    lb:update)
      opts="--account-name --debug --availability-zone"
      ;;
    lb:versions)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    lb:virtualips)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    list)
      opts="--separator --sync --long --account-name --debug --availability-zone --columns"
      ;;
    location)
      opts="--account-name --debug --availability-zone"
      ;;
    metadata)
      opts="--account-name --debug --availability-zone"
      ;;
    metadata:set)
      opts="--account-name --debug --availability-zone"
      ;;
    migrate)
      opts="--mime --account-name --debug --availability-zone"
      ;;
    move)
      opts="--account-name --debug --availability-zone"
      ;;
    networks)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    networks:add)
      opts="--account-name --debug --availability-zone --adminstateup"
      ;;
    networks:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    networks:update)
      opts="--account-name --debug --availability-zone --adminstateup"
      ;;
    ports)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    ports:add)
      opts="--fixedips --macaddress --account-name --debug --adminstate --availability-zone --deviceid --deviceowner --securitygroups"
      ;;
    ports:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    ports:update)
      opts="--fixedips --account-name --debug --adminstate --availability-zone --deviceid --deviceowner"
      ;;
    remove)
      opts="--account-name --at --debug --after --availability-zone --force"
      ;;
    routers)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    routers:add)
      opts="--account-name --debug --availability-zone --gateway --adminstateup"
      ;;
    routers:interface:add)
      opts="--account-name --debug --availability-zone"
      ;;
    routers:interface:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    routers:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    routers:update)
      opts="--account-name --debug --availability-zone --gateway --adminstateup"
      ;;
    securitygroups)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    securitygroups:add)
      opts="--account-name --debug --availability-zone"
      ;;
    securitygroups:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    securitygroups:rules)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    securitygroups:rules:add)
      opts="--direction --cidr --account-name --port-range --debug --source-group --availability-zone --ethertype"
      ;;
    securitygroups:rules:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    servers)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    servers:add)
      opts="--personality --security-group --account-name --volume --debug --private-key-file --image --availability-zone --userdata --metadata --network --key-name"
      ;;
    servers:console)
      opts="--dump-password --account-name --debug --private-key-file --availability-zone"
      ;;
    servers:limits)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:metadata)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    servers:metadata:add)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:metadata:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:password)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:ratelimits)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:reboot)
      opts="--account-name --hard --debug --availability-zone"
      ;;
    servers:rebuild)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    servers:ssh)
      opts="--command --account-name --debug --keypair --private-key-file --availability-zone --login"
      ;;
    snapshots)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    snapshots:add)
      opts="--account-name --description --debug --availability-zone --metadata"
      ;;
    snapshots:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    subnets)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    subnets:add)
      opts="--hostroutes --account-name --dhcp --debug --availability-zone --gateway --ipversion --dnsnameservers"
      ;;
    subnets:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    subnets:update)
      opts="--hostroutes --account-name --dhcp --debug --availability-zone --gateway --ipversion --dnsnameservers"
      ;;
    tempurl)
      opts="--account-name --debug --availability-zone --time-period --update"
      ;;
    volumes)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    volumes:add)
      opts="--zone --account-name --description --debug --image --availability-zone --metadata --snapshot"
      ;;
    volumes:attach)
      opts="--account-name --debug --availability-zone"
      ;;
    volumes:detach)
      opts="--account-name --debug --availability-zone"
      ;;
    volumes:remove)
      opts="--account-name --debug --availability-zone"
      ;;
    volumes:server)
      opts="--separator --account-name --debug --availability-zone --columns"
      ;;
    esac
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
  fi
  if [ "${prev}" == "hpcloud" ]
  then
    cmds="account account:catalog account:copy account:edit account:remove account:setup account:use account:verify acl acl:grant acl:revoke addresses addresses:add addresses:associate addresses:disassociate addresses:remove cdn:containers cdn:containers:add cdn:containers:get cdn:containers:location cdn:containers:remove cdn:containers:set complete config config:set containers:add containers:remove containers:sync copy dns dns:add dns:records dns:records:add dns:records:remove dns:records:update dns:remove dns:servers dns:update flavors get help images images:add images:metadata images:metadata:add images:metadata:remove images:remove info keypairs keypairs:add keypairs:import keypairs:private keypairs:private:add keypairs:private:location keypairs:private:remove keypairs:public_key keypairs:remove lb lb:add lb:algorithms lb:limits lb:nodes lb:nodes:add lb:nodes:remove lb:nodes:update lb:protocols lb:remove lb:update lb:versions lb:virtualips list location metadata metadata:set migrate move networks networks:add networks:remove networks:update ports ports:add ports:remove ports:update remove routers routers:add routers:interface:add routers:interface:remove routers:remove routers:update securitygroups securitygroups:add securitygroups:remove securitygroups:rules securitygroups:rules:add securitygroups:rules:remove servers servers:add servers:console servers:limits servers:metadata servers:metadata:add servers:metadata:remove servers:password servers:ratelimits servers:reboot servers:rebuild servers:remove servers:ssh snapshots snapshots:add snapshots:remove subnets subnets:add subnets:remove subnets:update tempurl volumes volumes:add volumes:attach volumes:detach volumes:remove volumes:server"
    COMPREPLY=( $(compgen -W "${cmds}" -- ${cur}) )
    __ltrim_colon_completions "$cur"
    return 0
  fi

  cmd="${words[1]}"
  if [ "${cmd}" == "copy" ]
  then
    _compopt_o_filenames
    COMPREPLY=( $( compgen -f -- "$cur" ) $( compgen -d -- "$cur" ) )
    return 0
  fi
  return 0
}
complete -F _hpcloud hpcloud
