_hpcloud()
{
  local cur prev opts cmds cmd files
  COMPREPLY=()
  _get_comp_words_by_ref -n : cur prev words

  if [[ ${cur} == -* ]] ; then
    if [ "${prev}" == "hpcloud" ]
    then
      cmd="hpcloud"
    else
      cmd="${words[1]}"
    fi
    case "${cmd}" in
    hpcloud)
      opts="--help --version"
      ;;
    account:edit)
      opts="--no-validate --provider "
      ;;
    account:setup)
      opts="--no-validate --provider "
      ;;
    account:verify)
      opts="--debug "
      ;;
    acl)
      opts="--availability-zone --debug --account-name "
      ;;
    acl:grant)
      opts="--availability-zone --debug --account-name "
      ;;
    acl:revoke)
      opts="--availability-zone --debug --account-name "
      ;;
    addresses)
      opts="--availability-zone --debug --account-name "
      ;;
    addresses:add)
      opts="--availability-zone --debug --account-name "
      ;;
    addresses:associate)
      opts="--availability-zone --debug --account-name "
      ;;
    addresses:disassociate)
      opts="--availability-zone --debug --account-name "
      ;;
    addresses:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    cdn:containers)
      opts="--all --availability-zone --debug --account-name "
      ;;
    cdn:containers:add)
      opts="--availability-zone --debug --account-name "
      ;;
    cdn:containers:get)
      opts="--availability-zone --debug --account-name "
      ;;
    cdn:containers:location)
      opts="--ssl --availability-zone --debug --account-name "
      ;;
    cdn:containers:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    cdn:containers:set)
      opts="--availability-zone --debug --account-name "
      ;;
    containers:add)
      opts="--force --availability-zone --debug --account-name "
      ;;
    containers:remove)
      opts="--force --availability-zone --debug --account-name "
      ;;
    copy)
      opts="--mime --source-account --availability-zone --debug --account-name "
      ;;
    flavors)
      opts="--availability-zone --debug --account-name "
      ;;
    get)
      opts="--availability-zone --debug --account-name "
      ;;
    images)
      opts="--availability-zone --debug --account-name "
      ;;
    images:add)
      opts="--availability-zone --debug --account-name --metadata "
      ;;
    images:metadata)
      opts="--availability-zone --debug --account-name "
      ;;
    images:metadata:add)
      opts="--availability-zone --debug --account-name "
      ;;
    images:metadata:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    images:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    keypairs)
      opts="--availability-zone --debug --account-name "
      ;;
    keypairs:add)
      opts="--fingerprint --private-key --output --availability-zone --debug --account-name "
      ;;
    keypairs:import)
      opts="--availability-zone --debug --account-name "
      ;;
    keypairs:public_key)
      opts="--availability-zone --debug --account-name "
      ;;
    keypairs:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    list)
      opts="--availability-zone --debug --account-name "
      ;;
    location)
      opts="--availability-zone --debug --account-name "
      ;;
    move)
      opts="--availability-zone --debug --account-name "
      ;;
    remove)
      opts="--force --availability-zone --debug --account-name "
      ;;
    securitygroups)
      opts="--availability-zone --debug --account-name "
      ;;
    securitygroups:add)
      opts="--availability-zone --debug --account-name "
      ;;
    securitygroups:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    securitygroups:rules)
      opts="--availability-zone --debug --account-name "
      ;;
    securitygroups:rules:add)
      opts="--port-range --cidr --source-group --availability-zone --debug --account-name "
      ;;
    securitygroups:rules:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    servers)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:add)
      opts="--key-name --image --volume --security-group --private-key-file --metadata --availability-zone --debug --account-name "
      ;;
    servers:console)
      opts="--private-key-file --dump-password --availability-zone --debug --account-name "
      ;;
    servers:metadata)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:metadata:add)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:metadata:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:password)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:reboot)
      opts="--hard --availability-zone --debug --account-name "
      ;;
    servers:rebuild)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    servers:ssh)
      opts="--private-key-file --keypair --login --command # Default: ssh --availability-zone --debug --account-name "
      ;;
    snapshots)
      opts="--availability-zone --debug --account-name "
      ;;
    snapshots:add)
      opts="--description --metadata --availability-zone --debug --account-name "
      ;;
    snapshots:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    tempurl)
      opts="--time-period --availability-zone --debug --account-name "
      ;;
    volumes)
      opts="--bootable --availability-zone --debug --account-name "
      ;;
    volumes:add)
      opts="--description --metadata --snapshot --image --availability-zone --debug --account-name "
      ;;
    volumes:attach)
      opts="--availability-zone --debug --account-name "
      ;;
    volumes:detach)
      opts="--availability-zone --debug --account-name "
      ;;
    volumes:remove)
      opts="--availability-zone --debug --account-name "
      ;;
    volumes:server)
      opts="--availability-zone --debug --account-name "
      ;;
    esac
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
  fi
  if [ "${prev}" == "hpcloud" ]
  then
    cmds="account account:copy account:edit account:remove account:setup account:use account:verify acl acl:grant acl:revoke addresses addresses:add addresses:associate addresses:disassociate addresses:remove cdn:containers cdn:containers:add cdn:containers:get cdn:containers:location cdn:containers:remove cdn:containers:set complete config config:set containers:add containers:remove copy flavors get help images images:add images:metadata images:metadata:add images:metadata:remove images:remove info keypairs keypairs:add keypairs:import keypairs:private keypairs:private:add keypairs:private:location keypairs:private:remove keypairs:public_key keypairs:remove list location move remove securitygroups securitygroups:add securitygroups:remove securitygroups:rules securitygroups:rules:add securitygroups:rules:remove servers servers:add servers:console servers:metadata servers:metadata:add servers:metadata:remove servers:password servers:reboot servers:rebuild servers:remove servers:ssh snapshots snapshots:add snapshots:remove tempurl volumes volumes:add volumes:attach volumes:detach volumes:remove volumes:server"
    COMPREPLY=( $(compgen -W "${cmds}" -- ${cur}) )
    __ltrim_colon_completions "$cur"
    return 0
  fi

  cmd="${words[1]}"
  if [ "${cmd}" == "copy" ]
  then
    files="${cur}*"
    COMPREPLY=( $(compgen -W "${files}" -- ${cur}) )
    return 0
  fi
  return 0
}
complete -F _hpcloud hpcloud
